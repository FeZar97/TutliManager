#ifndef WORKER_H
#define WORKER_H

#include <QWidget>
#include <QDebug>
#include <QtWinExtras>
#include <QTime>
#include <QScreen>
#include <QDateTime>

#include <windows.h>
#include <map>

#include "converter.h"
#include "tutlscontroller.h"
#include "mapsizedetector.h"

#define MOUSE_SINGLE_STEP_DX                 5
#define MOUSE_SINGLE_STEP_DY                 5

#define START_BATTLE_BUTTON_WIDTH            152
#define START_BATTLE_BUTTON_HEIGHT           44
#define START_BATTLE_BUTTON_LEFT_POS         2804
#define START_BATTLE_BUTTON_TOP_POS          4
#define START_BATTLE_BUTTON_R_CENTER_X       0.039583
#define START_BATTLE_BUTTON_R_CENTER_Y       0.024074

#define TANK_SELECT_REGION_WIDTH             160
#define TANK_SELECT_REGION_HEIGHT            98
#define TANK_SELECT_REGION_BEGIN_X           136
#define TANK_SELECT_REGION_BEGIN_Y           935
#define TANK_SELECT_BETWEEN_REGION_WIDTH     16

#define START_BUTTON_WIDTH                   147
#define START_BUTTON_HEIGHT                  40
#define START_BUTTON_X                       886
#define START_BUTTON_Y                       5

#define TUTLBOT_HOME_DIR                     "C:/TUTL/"

// размеры миникарты в пикселях для разрешения 1920х1080
const static std::vector<int> cBaseSizes{ 24,  27,  30,  34,  40,  47};
const static LPCWSTR cTutlsProcessName{L"WoT Client"};


/* Вестфилд
Size 227: {{0.251101, 0.841410}, {0.841410, 0.251101}},
Size 277: {{0.241877, 0.841155}, {0.841155, 0.241877}},
Size 327: {{0.235474, 0.840979}, {0.840979, 0.235474}},
Size 407: {{0.228501, 0.840295}, {0.840295, 0.228501}},
Size 507: {{0.222880, 0.840237}, {0.840237, 0.222880}},
Size 627: {{0.218501, 0.840510}, {0.840510, 0.216906}},
*/
/* Жемчужная река
Size 227: {{0.233480, 0.251101}, {0.806167, 0.810573}},
Size 277: {{0.223827, 0.241877}, {0.805054, 0.808664}},
Size 327: {{0.220183, 0.235474}, {0.804281, 0.807339}},
Size 407: {{0.211302, 0.228501}, {0.803440, 0.805897}},
Size 507: {{0.205128, 0.222880}, {0.804734, 0.808679}},
Size 627: {{0.200957, 0.218501}, {0.802233, 0.805423}},
*/
/* Затерянный город
Size 227: {{0.528634, 0.202643}, {0.528634, 0.854626}},
Size 277: {{0.519856, 0.191336}, {0.523466, 0.851986}},
Size 327: {{0.519878, 0.186544}, {0.519878, 0.850153}},
Size 407: {{0.515971, 0.179361}, {0.515971, 0.850123}},
Size 507: {{0.510848, 0.173570}, {0.512821, 0.852071}},
Size 627: {{0.508772, 0.169059}, {0.510367, 0.848485}},
*/
/* Лайв Окс
Size 227: {{0.198238, 0.832599}, {0.806167, 0.193833}},
Size 277: {{0.187726, 0.830325}, {0.805054, 0.184116}},
Size 327: {{0.183486, 0.831804}, {0.804281, 0.174312}},
Size 407: {{0.174447, 0.832924}, {0.803440, 0.167076}},
Size 507: {{0.167653, 0.830375}, {0.802761, 0.163708}},
Size 627: {{0.162679, 0.830941}, {0.802233, 0.156300}},
*/
/* Ласвилль
Size 227: {{0.334802, 0.898678}, {0.330396, 0.158590}},
Size 277: {{0.324910, 0.895307}, {0.321300, 0.148014}},
Size 327: {{0.321101, 0.896024}, {0.318043, 0.140673}},
Size 407: {{0.314496, 0.896806}, {0.312039, 0.132678}},
Size 507: {{0.307692, 0.897436}, {0.307692, 0.128205}},
Size 627: {{0.304625, 0.897927}, {0.303030, 0.121212}},
*/
/* Линия Зигфрида
Size 227: {{0.766520, 0.933921}, {0.792952, 0.127753}},
Size 277: {{0.761733, 0.935018}, {0.787004, 0.115523}},
Size 327: {{0.764526, 0.935780}, {0.788991, 0.107034}},
Size 407: {{0.761671, 0.936118}, {0.788698, 0.098280}},
Size 507: {{0.759369, 0.936884}, {0.786982, 0.092702}},
Size 627: {{0.759171, 0.937799}, {0.786284, 0.086124}},
*/
/* Минск
Size 227: {{0.607930, 0.903084}, {0.638767, 0.167401}},
Size 277: {{0.602888, 0.902527}, {0.631769, 0.155235}},
Size 327: {{0.602446, 0.905199}, {0.633027, 0.146789}},
Size 407: {{0.599509, 0.906634}, {0.628993, 0.140049}},
Size 507: {{0.595661, 0.905325}, {0.627219, 0.136095}},
Size 627: {{0.593301, 0.905901}, {0.625199, 0.127592}},
*/
/* Монастырь
Size 227: {{0.528634, 0.162996}, {0.546256, 0.889868}},
Size 277: {{0.523466, 0.148014}, {0.541516, 0.888087}},
Size 327: {{0.519878, 0.143731}, {0.538226, 0.886850}},
Size 407: {{0.515971, 0.135135}, {0.535627, 0.886978}},
Size 507: {{0.512821, 0.128205}, {0.532544, 0.887574}},
Size 627: {{0.508772, 0.124402}, {0.529506, 0.886762}},
*/
/* Мурованка
Size 227: {{0.475771, 0.140969}, {0.475771, 0.907489}},
Size 277: {{0.469314, 0.129964}, {0.469314, 0.906137}},
Size 327: {{0.467890, 0.122324}, {0.467890, 0.905199}},
Size 407: {{0.464373, 0.115479}, {0.464373, 0.904177}},
Size 507: {{0.459566, 0.108481}, {0.459566, 0.907298}},
Size 627: {{0.456140, 0.103668}, {0.456140, 0.904306}},
*/
/* Оверлорд
Size 227: {{0.577093, 0.158590}, {0.572687, 0.898678}},
Size 277: {{0.570397, 0.148014}, {0.566787, 0.898917}},
Size 327: {{0.568807, 0.140673}, {0.562691, 0.896024}},
Size 407: {{0.565111, 0.135135}, {0.560197, 0.896806}},
Size 507: {{0.562130, 0.128205}, {0.558185, 0.899408}},
Size 627: {{0.559809, 0.122807}, {0.555024, 0.896332}},
*/
/* Песчаная река
Size 227: {{0.872247, 0.696035}, {0.154185, 0.400881}},
Size 277: {{0.873646, 0.689531}, {0.140794, 0.393502}},
Size 327: {{0.874618, 0.688073}, {0.134557, 0.388379}},
Size 407: {{0.874693, 0.687961}, {0.127764, 0.383292}},
Size 507: {{0.873767, 0.686391}, {0.122288, 0.380671}},
Size 627: {{0.874003, 0.684211}, {0.114833, 0.374801}},
*/
/* Промзона
Size 227: {{0.462555, 0.154185}, {0.462555, 0.911894}},
Size 277: {{0.458484, 0.140794}, {0.454874, 0.909747}},
Size 327: {{0.455657, 0.134557}, {0.452599, 0.911315}},
Size 407: {{0.449631, 0.125307}, {0.447174, 0.911548}},
Size 507: {{0.445759, 0.120316}, {0.443787, 0.913215}},
Size 627: {{0.441786, 0.114833}, {0.440191, 0.910686}},
*/
/* Прохоровка
Size 227: {{0.414097, 0.114537}, {0.577093, 0.942731}},
Size 277: {{0.404332, 0.101083}, {0.570397, 0.942238}},
Size 327: {{0.403670, 0.094801}, {0.568807, 0.941896}},
Size 407: {{0.395577, 0.085995}, {0.565111, 0.943489}},
Size 507: {{0.390533, 0.078895}, {0.562130, 0.944773}},
Size 627: {{0.387560, 0.074960}, {0.559809, 0.944179}},
*/
/* Редшир
Size 227: {{0.528634, 0.149780}, {0.524229, 0.925110}},
Size 277: {{0.523466, 0.137184}, {0.519856, 0.924188}},
Size 327: {{0.519878, 0.131498}, {0.516820, 0.923547}},
Size 407: {{0.515971, 0.122850}, {0.513514, 0.923833}},
Size 507: {{0.512821, 0.116371}, {0.508876, 0.925049}},
Size 627: {{0.510367, 0.111643}, {0.507177, 0.923445}},
*/
/* Рыбацкая бухта
Size 227: {{0.511013, 0.894273}, {0.449339, 0.162996}},
Size 277: {{0.505415, 0.891697}, {0.440433, 0.151625}},
Size 327: {{0.504587, 0.896024}, {0.440367, 0.140673}},
Size 407: {{0.501229, 0.894349}, {0.434889, 0.132678}},
Size 507: {{0.495069, 0.895464}, {0.429980, 0.130178}},
Size 627: {{0.492823, 0.896332}, {0.427432, 0.121212}},
*/
/* Старая гавань
Size 227: {{0.189427, 0.383260}, {0.841410, 0.387665}},
Size 277: {{0.176895, 0.375451}, {0.837545, 0.379061}},
Size 327: {{0.171254, 0.370031}, {0.840979, 0.376147}},
Size 407: {{0.164619, 0.366093}, {0.840295, 0.368550}},
Size 507: {{0.157791, 0.360947}, {0.838264, 0.366864}},
Size 627: {{0.153110, 0.358852}, {0.837321, 0.360447}},
*/
/* Степи
Size 227: {{0.444934, 0.193833}, {0.740088, 0.845815}},
Size 277: {{0.440433, 0.180505}, {0.736462, 0.844765}},
Size 327: {{0.437309, 0.177370}, {0.737003, 0.844037}},
Size 407: {{0.432432, 0.169533}, {0.734644, 0.842752}},
Size 507: {{0.426035, 0.163708}, {0.733728, 0.844181}},
Size 627: {{0.422648, 0.157895}, {0.732057, 0.842105}},
*/
/* Тихий берег
Size 227: {{0.409692, 0.810573}, {0.726872, 0.224670}},
Size 277: {{0.404332, 0.808664}, {0.722022, 0.216606}},
Size 327: {{0.400612, 0.810398}, {0.721713, 0.207951}},
Size 407: {{0.395577, 0.808354}, {0.719902, 0.199017}},
Size 507: {{0.390533, 0.808679}, {0.719921, 0.195266}},
Size 627: {{0.385965, 0.807018}, {0.717703, 0.189793}},
*/
/* Тундра
Size 227: {{0.625551, 0.722467}, {0.444934, 0.365639}},
Size 277: {{0.620939, 0.718412}, {0.436823, 0.357401}},
Size 327: {{0.620795, 0.718654}, {0.434251, 0.351682}},
Size 407: {{0.619165, 0.714988}, {0.429975, 0.346437}},
Size 507: {{0.615385, 0.714004}, {0.426035, 0.343195}},
Size 627: {{0.614035, 0.712919}, {0.421053, 0.336523}},
*/
/* Хайвей
Size 227: {{0.211454, 0.832599}, {0.709251, 0.202643}},
Size 277: {{0.198556, 0.830325}, {0.703971, 0.191336}},
Size 327: {{0.195719, 0.828746}, {0.706422, 0.183486}},
Size 407: {{0.186732, 0.830467}, {0.702703, 0.176904}},
Size 507: {{0.181460, 0.828402}, {0.702170, 0.173570}},
Size 627: {{0.175439, 0.829346}, {0.700159, 0.165869}},
*/
/* Харьков
Size 227: {{0.568282, 0.140969}, {0.572687, 0.933921}},
Size 277: {{0.559567, 0.126354}, {0.566787, 0.931408}},
Size 327: {{0.559633, 0.122324}, {0.565749, 0.932722}},
Size 407: {{0.555283, 0.113022}, {0.560197, 0.933661}},
Size 507: {{0.552268, 0.106509}, {0.558185, 0.934911}},
Size 627: {{0.550239, 0.102073}, {0.555024, 0.933014}},
*/
/* Эль-Халлуф
Size 227: {{0.215859, 0.823789}, {0.806167, 0.237885}},
Size 277: {{0.202166, 0.823105}, {0.805054, 0.227437}},
Size 327: {{0.198777, 0.822630}, {0.804281, 0.220183}},
Size 407: {{0.191646, 0.823096}, {0.805897, 0.211302}},
Size 507: {{0.185404, 0.822485}, {0.804734, 0.207101}},
Size 627: {{0.180223, 0.821372}, {0.803828, 0.200957}},
*/
/* Энск
Size 227: {{0.559471, 0.145374}, {0.559471, 0.911894}},
Size 277: {{0.552347, 0.129964}, {0.552347, 0.913357}},
Size 327: {{0.553517, 0.125382}, {0.550459, 0.911315}},
Size 407: {{0.547912, 0.117936}, {0.545455, 0.911548}},
Size 507: {{0.544379, 0.110454}, {0.544379, 0.913215}},
Size 627: {{0.542265, 0.105263}, {0.540670, 0.912281}},
*/


const static std::map<int, std::map<std::string, QPair<QPointF, QPointF>>> basesRelativeCoords {
    // 627
    {cMapSizes[5], {
    {"",                 {{0.0, 0.0}, {0.0, 0.0}}},
    }},

    // 507
    {cMapSizes[4], {
    {"",                 {{0.0, 0.0}, {0.0, 0.0}}},
    }},

    // 407
    {cMapSizes[3], {
    {"",                 {{0.0, 0.0}, {0.0, 0.0}}},
    }},

    // 327
    {cMapSizes[2], {
    {"",                 {{0.0, 0.0}, {0.0, 0.0}}},
    }},

    // 277
    {cMapSizes[1], {
    {"",                 {{0.0, 0.0}, {0.0, 0.0}}},
    }},

    // 227
    {cMapSizes[0], {
    {"",                 {{0.0, 0.0}, {0.0, 0.0}}},
    }}
};

class WORKER : public QObject{
    Q_OBJECT

public:
    HWND                    tutliClient{nullptr};

    TutlsController         tutlsController;
    MapSizeDetector         mapSizeDetector;

    QString                 curBaseFileName;

    cv::Mat                 lastScreen; // последний скрин окна тутлов
    cv::Mat                 mapAreaImage; // максимальная область с картой (627х627)
    cv::Mat                 currentMapMat; // текущий формат карты
    int                     currentMapSizeIdx; // индекс размера карты в массиве sizes
    MapSizes                currentMapSize; // фактичекий размер текущей карты

    int                     currentBaseSize; // фактичекий размер баз для данного размера карты
    bool                    isCurrentMapSizeDetect; // флаг для проверки корректности найденной области с картой
    cv::Mat                 basesMatchMapMat; // карта с найденными базами

    // temp
    std::map<int, std::pair<QPointF, QPointF>> curMapRelativeCoords;
    bool                    zoomInIterations{true};

    bool                    basesDetectSuccess; // если корелляция по обеим базам > 0.85
    cv::Point               enemyBasePoint;
    cv::Point               unionBasePoint;

    std::vector<cv::Mat>    enemyBaseTemplates;
    std::vector<cv::Mat>    unionBaseTemplates;

    bool                    enableWork{false};
    qint64                  lastProcessTimestamp;
    WORKER();

    void                    tryFindTutliProcess();

    // обработка скрина
    void                    process();
    bool                    makeScreenshot(); // скрин+бан
    void                    detectMapNameAndBaseLocation();

    BITMAPINFOHEADER        createBitmapHeader(int width, int height);
    cv::Mat                 captureScreenMat(HWND hwnd);

    void                    startBattle(); // васьки в бой

public slots:
    void                    startProcess();
};

#endif // WORKER_H
